[tool.poetry]
name = "web-api"
version = "0.1.0"
description = "django for API book"
authors = ["lyu1 <leon.yu@illumina.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "^4.2.5"
django-cors-headers = "^4.2.0"
djangorestframework = "^3.14.0"
drf-spectacular = "^0.26.4"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79

[tool.ruff]
ignore = [
    "ANN101",  # Missing type annotation for `self` in method
    "ANN102",  # Missing type annotation for `cls` in classmethod
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in `args`
    "ARG001",  # Unused function argument
    "ARG002",  # Unused method argument
    "ARG005",  # Unused lambda argument: `args`
    "COM812",  # Buggy: https://github.com/charliermarsh/ruff/issues/4480
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D105",    # Missing docstring in magic method
    "D106",    # Missing docstring in public nested class
    "D202",    # No blank lines allowed after function docstring
    "D205",    # 1 blank line required between summary line and description
    "D400",    # First line should end with a period
    "D401",    # First line should be in imperative mood
    "D404",    # First word of the docstring should not be "This"
    "D414",    # Section has no content ("Parameters"/"Returns")
    "EXE002",  # Executable file missing shebang
    "E501",    # long line -> defer to black
    "S101",    # Use of `assert` detected
    "S602",    # S602-S607: Ban usage of subprocess module due to risk of shell
    "S603",    # injection. We can ignore because we do not accept untrusted
    "S604",    # user input.
    "S605",
    "S606",
    "S607",
    "SIM112",  # Use capitalized environment variable
    "TCH002",  # Move third-party import into a type-checking block
    "TCH003",  # Move standard library import `threading` into a type-checking block
]

exclude = [
    ".tox",
    ".pytest_cache",
    # Contains directories with .py extension which cause ruff errors
]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.isort]
combine-as-imports = true

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
ignore-semiprivate = true
ignore-private = true
ignore-property-decorators = true
ignore-module = true
ignore-nested-functions = true
fail-under = 0
exclude = ["setup.py", "docs", "build", "tests"]
ignore-regex = ["^get_tests$", "^select_args$"]
verbose = 1
quiet = false
whitelist-regex = []
color = true
